{"version":3,"sources":["webpack://revise/webpack/universalModuleDefinition","webpack://revise/webpack/bootstrap","webpack://revise/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getValue","obj","expression","traverseObject","write","newObj","_objectSpread","objPtr","objPtrNull","readValue","newObjPtr","tokens","string","rex","parts","length","match","push","substr","endsWith","tokenize_revise_expression","stack","arrayPropOps","find","array","findIndex","remove","concat","insert","append","arrayPropOpNames","getOwnPropertyNames","arrayPropOpValues","map","prop","forEach","token","tokenIndex","isArrayProp","startsWith","propNameRaw","isArray","unshift","stackParamNames","_toConsumableArray","Array","idx","stackParamValues","test","replace","evaluatedPropName","Function","apply","end","newVal","arrayPropValue","splice","split","parseInt","revise","set","args","slice","arguments"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"revise\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"revise\"] = factory();\n\telse\n\t\troot[\"revise\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const tokenize_revise_expression = function(string) {\r\n    // word or [square bracket set with [bracket sets] optionally inside] followed by \".\" or end of line\r\n    const rex = /^([\\w\\$]+|(?:\\[(?:(?:\\[.*\\])|[^\\]])*\\]))(?:\\[|\\.|$)/;\r\n    var parts = [];\r\n    while (string.length) {        \r\n        const match = string.match(rex); \r\n        if (match == null || match.length < 2) throw \"invalid expression at: >\" + string;\r\n\r\n        parts.push(match[1])\r\n        string = string.substr(match[0].length + (match[0].endsWith(\"[\") ? -1 : 0))\r\n    }\r\n\r\n    return parts;\r\n}\r\n\r\nexport const getValue = function(obj, expression) {\r\n   return traverseObject(false, obj, expression);\r\n}\r\n\r\nconst setValue = function(obj, expression, value) {\r\n    var newObj = null;\r\n    \r\n    for (var args = [...arguments].slice(1); args.length; args = args.slice(2))\r\n        newObj = traverseObject.apply(null, [true, newObj||obj, ...args]);\r\n\r\n    return newObj;\r\n}\r\n\r\nconst traverseObject = function(write, obj, expression, value) {\r\n    if (obj == null) throw \"Argument exception: object is required\";\r\n    if (expression == null) throw \"Argument exception: expression is required\";\r\n\r\n    const newObj = {...obj};\r\n    var objPtr = obj;\r\n    var objPtrNull = obj;\r\n    var readValue = null;\r\n    var newObjPtr = newObj;\r\n\r\n    const tokens = tokenize_revise_expression(expression);\r\n    const stack = [objPtr];\r\n    const writeArrayPropOps = {\r\n        remove: (d) => `$remove_${d}`,\r\n        insert: (d) => `$insert_${d}`,\r\n        append: () => `$append`,\r\n    }\r\n\r\n    const arrayPropOps = {\r\n        find: (array, expression) => array.findIndex(expression),\r\n        ...(write ? writeArrayPropOps : {})\r\n    }\r\n\r\n    const arrayPropOpNames = Object.getOwnPropertyNames(arrayPropOps);\r\n    const arrayPropOpValues = arrayPropOpNames.map(prop => arrayPropOps[prop]);\r\n    \r\n    tokens.forEach((token, tokenIndex) => {\r\n        const isArrayProp = token.startsWith(\"[\");\r\n        var propNameRaw = isArrayProp ? token.substr(1, token.length - 2) : token;\r\n        const isArray = (tokens[tokenIndex+1]||\"\").startsWith(\"[\");\r\n        \r\n        stack.unshift((objPtr||{})[propNameRaw]);\r\n        const stackParamNames = ([...new Array(stack.length)]).map((i, idx) => \"$\" + idx);\r\n        const stackParamValues = [...stack];\r\n\r\n        // Inject array into 'find' shortcut\r\n        if (isArrayProp && /^find\\(.*\\)$/.test(propNameRaw))\r\n            propNameRaw = propNameRaw.replace(/^find\\((.*)\\)$/, \"find($$1, $1)\");\r\n\r\n        // Evaluate stuff inside the []'s as the property name\r\n        const evaluatedPropName = isArrayProp\r\n            ? Function.apply(\r\n                    null, \r\n                    [\r\n                        ...stackParamNames,\r\n                        ...arrayPropOpNames,\r\n                        `return ${propNameRaw}`\r\n                    ]\r\n                )\r\n                .apply(null, [...stackParamValues, ...arrayPropOpValues])\r\n            : propNameRaw;    \r\n\r\n        // Increment the original object pointer\r\n        objPtr = (objPtr||{})[evaluatedPropName]\r\n        objPtrNull = objPtrNull && objPtrNull[evaluatedPropName] || null;\r\n\r\n        const end = (tokenIndex == tokens.length - 1);\r\n\r\n        if (!write && (end || objPtrNull == null)) return readValue = objPtrNull;\r\n\r\n        const newVal = end\r\n            ? typeof value == \"function\"\r\n                ? value.apply(null, stack)\r\n                : value\r\n            : isArray\r\n                ? [...(objPtr||[])] \r\n                : {...(objPtr||{})}\r\n\r\n        if (isArrayProp) {\r\n            var arrayPropValue = evaluatedPropName;\r\n\r\n            // Apply array specific operations\r\n            if (/^\\$remove_\\d+$/.test(arrayPropValue)) {\r\n                newObjPtr.splice(arrayPropValue.split(\"_\")[1], 1)\r\n                return newObj;\r\n            } \r\n            else if (/^\\$insert_\\d+$/.test(arrayPropValue)) {\r\n                arrayPropValue = parseInt(arrayPropValue.split(\"_\")[1]);\r\n                newObjPtr.splice(arrayPropValue, 0, newVal)\r\n            }\r\n            else if (/^\\$append+$/.test(arrayPropValue)) {\r\n                arrayPropValue = newObjPtr.length;\r\n                newObjPtr.splice(arrayPropValue, 0, newVal);\r\n            } \r\n\r\n            // Increment and assign the new object pointer\r\n            newObjPtr = newObjPtr[arrayPropValue] = newVal;\r\n        }\r\n        else {\r\n            // Increment and assign the new object pointer\r\n            newObjPtr = newObjPtr[evaluatedPropName] = newVal;\r\n        }\r\n    });\r\n    \r\n    return write ? newObj : readValue;\r\n}\r\n\r\nconst revise = {\r\n    get: getValue,\r\n    set: setValue\r\n}\r\n\r\nexport default revise; "],"sourceRoot":""}